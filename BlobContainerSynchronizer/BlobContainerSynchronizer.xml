<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlobContainerSynchronizer</name>
    </assembly>
    <members>
        <member name="T:BlobContainerSynchronizer.BlobSynchronizer">
            <summary>
            Manages the synchronization of a single blob. 
            </summary>
        </member>
        <member name="M:BlobContainerSynchronizer.BlobSynchronizer.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructs a blob synchronizer instance
            </summary>
            <param name="storageConnectionString">The connection string for the storage account where the blob is located</param>
            <param name="containerName">The container holding the target blob</param>
            <param name="blobName">The name of the blob to synchronize</param>
            <param name="destinationFilePath">The local file path to store the blob (the etag file will also be placed in the same folder)</param>
        </member>
        <member name="M:BlobContainerSynchronizer.BlobSynchronizer.SyncPeriodicAsync(System.TimeSpan)">
            <summary>
            Syncs the blob to disk every <paramref name="updateCheckFrequency"/>.
            Does not return.
            </summary>
            <param name="updateCheckFrequency">The frequency to check for blob updates.</param>
        </member>
        <member name="M:BlobContainerSynchronizer.BlobSynchronizer.SyncAsync">
            <summary>
            Synchronizes the blobs in the container to the given directory
            </summary>
            <returns>Task to await on for asynchronous completion</returns>
        </member>
        <member name="M:BlobContainerSynchronizer.BlobSynchronizer.DownloadBlobAsync(BlobContainerSynchronizer.Etags)">
            <summary>
            Downloads the blob to disk if it has an etag newer than 
            the one in the <paramref name="etags"/>
            </summary>
        </member>
        <member name="P:BlobContainerSynchronizer.BlobSynchronizer.BlobSyncResultAction">
            <summary>
            Action to call when the blob synchronizes. Used to update
            local state when a blob data is received and to log
            blob updates.
            </summary>
        </member>
        <member name="F:BlobContainerSynchronizer.BlobSyncResult.TimeToDownload">
            <summary>
            Total time required to downlod the blob
            </summary>
        </member>
        <member name="F:BlobContainerSynchronizer.BlobSyncResult.BlobLastModifiedTime">
            <summary>
            The last time the blob was modified in Storage
            </summary>
        </member>
        <member name="F:BlobContainerSynchronizer.BlobSyncResult.FilePath">
            <summary>
            The path to the file on disk
            </summary>
        </member>
        <member name="M:BlobContainerSynchronizer.ContainerSynchronizer.SyncPeriodicAsync(System.TimeSpan)">
            <summary>
            Syncs the container to disk every <paramref name="updateCheckFrequency"/>.
            Does not return.
            </summary>
            <param name="updateCheckFrequency">The frequency to check for blob updates.</param>
        </member>
        <member name="M:BlobContainerSynchronizer.ContainerSynchronizer.SyncAsync">
            <summary>
            Synchronizes the blobs in the container to the given directory
            </summary>
            <returns>Task to await on for asynchronous completion</returns>
        </member>
        <member name="M:BlobContainerSynchronizer.ContainerSynchronizer.DownloadBlobsAsync(System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.Blob.ICloudBlob},BlobContainerSynchronizer.Etags)">
            <summary>
            Downloads the blobs in the list to disk if they have etags that are newer than 
            the ones in the <paramref name="etags"/>
            </summary>
        </member>
        <member name="T:BlobContainerSynchronizer.Etags">
            <summary>
            Represents a set of etags and facilitates checking for new etags
            and saving the etags to disk.
            </summary>
        </member>
        <member name="F:BlobContainerSynchronizer.Etags.etagsDictionary">
            <summary>
            Dictionary containing the mapping of entity name to etag.
            It is a concurrent dictionary because IsNewEtag may be called in parallel,
            which will cause parallel updates to the dictionary.
            </summary>
        </member>
        <member name="M:BlobContainerSynchronizer.Etags.IsNewEtagAndUpdate(System.String,System.String)">
            <summary>
            Checks if the etag is new or old.
            If it is a new etag, the etag in the file will be updated.
            All entity names in the etags set should be considered unique.
            <remarks>This method is thread safe.</remarks>
            </summary>
            <param name="entityName">The name of the entity (such as blob name)</param>
            <param name="etag">The etag to check</param>
            <returns>Returns true if the etag is either not in the list or is a new etag.</returns>
        </member>
        <member name="M:BlobContainerSynchronizer.Etags.SaveEtagsAsync(System.String)">
            <summary>
            Saves the etags file back to disk. This should be done after every update
            in case the VM goes down.
            </summary>
        </member>
        <member name="M:BlobContainerSynchronizer.Etags.ReadEtagsAsync(System.String)">
            <summary>
            Reads the etags file from disk
            </summary>
        </member>
    </members>
</doc>
